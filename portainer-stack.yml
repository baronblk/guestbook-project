services:
  mariadb:
    image: mariadb:11
    container_name: guestbook-mariadb-emergency
    restart: unless-stopped
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: Kx9mP2vR8nQ5wE7tY3uI6oL1sA4hG9jB
      MYSQL_DATABASE: guestbook
      MYSQL_USER: guestuser
      MYSQL_PASSWORD: whHBJveMvwjs5a6p
    volumes:
    - /volume2/docker/guestbook/db:/var/lib/mysql
    networks:
    - guestbook-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    image: ghcr.io/baronblk/guestbook-project:3.0.5-uploads-fix
    container_name: guestbook-app-emergency
    restart: unless-stopped
    platform: linux/amd64
    ports:
    - "8080:80"
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: mariadb
      DB_USER: guestuser
      DB_PASSWORD: whHBJveMvwjs5a6p
      DB_NAME: guestbook

      # JWT Configuration
      JWT_SECRET_KEY: DeRBC3FDeY8d9nw9WMBwNJ0LpVyvB5ty607r2PHdmQBpqn
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_HOURS: 24

      # üë§ Admin Configuration (FIXED: SUPERUSER = TRUE)
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@dcng.de
      ADMIN_PASSWORD: whHBJveMvwjs5a6p
      ADMIN_ROLE: superuser
      ADMIN_IS_SUPERUSER: "true"

      # üåê CORS Configuration - INKL. NEUE DOMAIN
      #CORS_ORIGINS: "https://guestbook.gcng.de,http://guestbook.gcng.de,http://192.168.2.12:8080,http://localhost:8080,http://localhost:80,http://localhost:8080"
      #ALLOWED_HOSTS: "guestbook.gcng.de,192.168.2.12,localhost,127.0.0.1,*.localhost"
      CORS_ORIGINS: "*"
      ALLOWED_HOSTS: "*"

      # üöÄ Production Settings
      ENVIRONMENT: production
      DEBUG: "true"
      LOG_LEVEL: DEBUG

      # üìä Extended Logging Configuration
      UVICORN_LOG_LEVEL: debug
      UVICORN_ACCESS_LOG: "true"
      SQLALCHEMY_ECHO: "true"
      ENABLE_SQL_LOGGING: "true"
      ENABLE_REQUEST_LOGGING: "true"
      ENABLE_ERROR_LOGGING: "true"
      ENABLE_VALIDATION_LOGGING: "true"
      LOG_FORMAT: detailed
      LOG_TO_CONSOLE: "true"
      LOG_TO_FILE: "true"

      # üîí Security Hardening
      ENABLE_RATE_LIMITING: "false"
      ENABLE_BRUTE_FORCE_PROTECTION: "false"
      MAX_LOGIN_ATTEMPTS: 50
      LOGIN_BLOCK_DURATION: 60
      ENABLE_SECURITY_MONITORING: "false"

    volumes:
    - /volume2/docker/guestbook/uploads:/app/uploads
    networks:
    - guestbook-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/docs" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  guestbook-network:
    name: guestbook-network
    driver: bridge

# üìã FIXED DOMAIN-KONFIGURATION:
#
# ‚úÖ Unterst√ºtzte Domains/Hosts:
#    - https://guestbook.gcng.de (Hauptdomain)
#    - http://guestbook.gcng.de (HTTP Fallback)
#    - http://192.168.2.12:8080 (Direkter NAS-Zugang)
#    - http://localhost:8080 (Lokal)
#
# üîß CORS Origins:
#    - Alle oben genannten Domains
#    - Zus√§tzlich localhost:8080, localhost:80
#
# üöÄ DEPLOYMENT:
#    docker-compose -f docker-compose-gcng-fixed.yml down
#    docker-compose -f docker-compose-gcng-fixed.yml up -d
#
# üìä LOGS:
#    docker-compose -f docker-compose-gcng-fixed.yml logs -f app
#
# üîê ADMIN-ZUGANG (FIXED - JETZT SUPERUSER):
#    - Web: https://guestbook.gcng.de
#    - Admin-Panel: https://guestbook.gcng.de/admin
#    - Username: admin
#    - Password: whHBJveMvwjs5a6p
#    - ‚úÖ SUPERUSER: true (kann jetzt alle Admin-Funktionen nutzen)
#
# üîß WICHTIGE √ÑNDERUNGEN:
#    - ADMIN_ROLE: admin ‚Üí superuser
#    - ADMIN_IS_SUPERUSER: "false" ‚Üí "true"
