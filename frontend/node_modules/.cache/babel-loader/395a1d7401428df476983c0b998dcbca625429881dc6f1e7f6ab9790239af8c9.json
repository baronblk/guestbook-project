{"ast":null,"code":"import{useEffect,useRef}from'react';import{useAuthStore}from'../store/authStore';import toast from'react-hot-toast';export const useSessionMonitor=function(){let intervalMinutes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;const{token,validateSession,logout}=useAuthStore();const intervalRef=useRef(null);const warningShownRef=useRef(false);useEffect(()=>{// Nur überwachen wenn eingeloggt\nif(!token){if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}warningShownRef.current=false;return;}// Session-Validierung alle X Minuten\nconst validateSessionPeriodically=async()=>{const isValid=await validateSession();if(!isValid){toast.error('Session abgelaufen. Sie werden zur Anmeldung weitergeleitet...');return;}// Warnung wenn Session bald abläuft (basierend auf JWT-Token)\ntry{const payload=JSON.parse(atob(token.split('.')[1]));const expiry=payload.exp*1000;// JWT exp ist in Sekunden\nconst now=Date.now();const timeLeft=expiry-now;const fiveMinutes=5*60*1000;if(timeLeft<=fiveMinutes&&timeLeft>0&&!warningShownRef.current){warningShownRef.current=true;toast('Ihre Session läuft in weniger als 5 Minuten ab!',{duration:6000,icon:'⚠️',style:{background:'#FEF3C7',color:'#92400E',border:'1px solid #F59E0B'}});}// Reset warning flag wenn Session wieder länger gültig ist\nif(timeLeft>fiveMinutes){warningShownRef.current=false;}}catch(error){console.error('Error parsing token for session warning:',error);}};// Initiale Validierung\nvalidateSessionPeriodically();// Regelmäßige Validierung\nintervalRef.current=setInterval(validateSessionPeriodically,intervalMinutes*60*1000);return()=>{if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}};},[token,validateSession,intervalMinutes]);// Auch bei Tab-Wechsel validieren\nuseEffect(()=>{if(!token)return;const handleVisibilityChange=()=>{if(!document.hidden){validateSession();}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[token,validateSession]);};","map":{"version":3,"names":["useEffect","useRef","useAuthStore","toast","useSessionMonitor","intervalMinutes","arguments","length","undefined","token","validateSession","logout","intervalRef","warningShownRef","current","clearInterval","validateSessionPeriodically","isValid","error","payload","JSON","parse","atob","split","expiry","exp","now","Date","timeLeft","fiveMinutes","duration","icon","style","background","color","border","console","setInterval","handleVisibilityChange","document","hidden","addEventListener","removeEventListener"],"sources":["/Users/renesuss/Development/Tools/src/guestbook-project/frontend/src/hooks/useSessionMonitor.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useAuthStore } from '../store/authStore';\nimport toast from 'react-hot-toast';\n\nexport const useSessionMonitor = (intervalMinutes: number = 5) => {\n  const { token, validateSession, logout } = useAuthStore();\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const warningShownRef = useRef<boolean>(false);\n\n  useEffect(() => {\n    // Nur überwachen wenn eingeloggt\n    if (!token) {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      warningShownRef.current = false;\n      return;\n    }\n\n    // Session-Validierung alle X Minuten\n    const validateSessionPeriodically = async () => {\n      const isValid = await validateSession();\n      \n      if (!isValid) {\n        toast.error('Session abgelaufen. Sie werden zur Anmeldung weitergeleitet...');\n        return;\n      }\n\n      // Warnung wenn Session bald abläuft (basierend auf JWT-Token)\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        const expiry = payload.exp * 1000; // JWT exp ist in Sekunden\n        const now = Date.now();\n        const timeLeft = expiry - now;\n        const fiveMinutes = 5 * 60 * 1000;\n\n        if (timeLeft <= fiveMinutes && timeLeft > 0 && !warningShownRef.current) {\n          warningShownRef.current = true;\n          toast('Ihre Session läuft in weniger als 5 Minuten ab!', {\n            duration: 6000,\n            icon: '⚠️',\n            style: {\n              background: '#FEF3C7',\n              color: '#92400E',\n              border: '1px solid #F59E0B',\n            },\n          });\n        }\n\n        // Reset warning flag wenn Session wieder länger gültig ist\n        if (timeLeft > fiveMinutes) {\n          warningShownRef.current = false;\n        }\n      } catch (error) {\n        console.error('Error parsing token for session warning:', error);\n      }\n    };\n\n    // Initiale Validierung\n    validateSessionPeriodically();\n\n    // Regelmäßige Validierung\n    intervalRef.current = setInterval(\n      validateSessionPeriodically,\n      intervalMinutes * 60 * 1000\n    );\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [token, validateSession, intervalMinutes]);\n\n  // Auch bei Tab-Wechsel validieren\n  useEffect(() => {\n    if (!token) return;\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        validateSession();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [token, validateSession]);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}