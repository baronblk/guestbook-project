{"ast":null,"code":"import axios from 'axios';\n// Base API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('admin_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('admin_token');\n    window.location.href = '/admin/login';\n  }\n  return Promise.reject(error);\n});\n\n// Public API\nexport const publicApi = {\n  // Reviews\n  async getReviews(params = {}) {\n    const response = await api.get('/api/reviews', {\n      params\n    });\n    return response.data;\n  },\n  async getReview(id) {\n    const response = await api.get(`/api/reviews/${id}`);\n    return response.data;\n  },\n  async createReview(reviewData) {\n    const response = await api.post('/api/reviews', reviewData);\n    return response.data;\n  },\n  async uploadReviewImage(reviewId, file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post(`/api/reviews/${reviewId}/image`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async getStats() {\n    const response = await api.get('/api/stats');\n    return response.data;\n  }\n};\n\n// Admin API\nexport const adminApi = {\n  // Auth\n  async login(credentials) {\n    const response = await api.post('/api/admin/login', null, {\n      params: credentials\n    });\n    return response.data;\n  },\n  // Admin User Management\n  async createAdmin(data) {\n    const response = await api.post('/api/admin/users', data);\n    return response.data;\n  },\n  // Reviews Management\n  async getReviews(params = {}) {\n    const response = await api.get('/api/admin/reviews', {\n      params\n    });\n    return response.data;\n  },\n  async updateReview(id, updateData) {\n    const response = await api.put(`/api/admin/reviews/${id}`, updateData);\n    return response.data;\n  },\n  async deleteReview(id) {\n    const response = await api.delete(`/api/admin/reviews/${id}`);\n    return response.data;\n  },\n  // Import/Export\n  async importData(importData) {\n    const response = await api.post('/api/admin/import', importData);\n    return response.data;\n  },\n  async exportData() {\n    const response = await api.get('/api/admin/export');\n    return response.data;\n  },\n  async importReviews(importData) {\n    const response = await api.post('/api/admin/reviews/import', importData);\n    return response.data;\n  },\n  async getStats() {\n    const response = await api.get('/api/admin/stats');\n    return response.data;\n  },\n  async exportReviews() {\n    const response = await api.get('/api/admin/export', {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n};\n\n// Utility functions\nexport const apiUtils = {\n  handleApiError(error) {\n    var _error$response2, _error$response2$data;\n    if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n      return error.response.data.message;\n    }\n    if (error.message) {\n      return error.message;\n    }\n    return 'Ein unbekannter Fehler ist aufgetreten';\n  },\n  downloadFile(blob, filename) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  },\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString('de-DE', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  },\n  formatRating(rating) {\n    return '★'.repeat(rating) + '☆'.repeat(5 - rating);\n  },\n  truncateText(text, maxLength = 200) {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength).trim() + '...';\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","publicApi","getReviews","params","get","data","getReview","id","createReview","reviewData","post","uploadReviewImage","reviewId","file","formData","FormData","append","getStats","adminApi","login","credentials","createAdmin","updateReview","updateData","put","deleteReview","delete","importData","exportData","importReviews","exportReviews","responseType","apiUtils","handleApiError","_error$response2","_error$response2$data","message","downloadFile","blob","filename","url","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","formatRating","rating","repeat","truncateText","text","maxLength","length","substring","trim"],"sources":["/Users/renesuss/Development/Tools/src/guestbook-project/frontend/src/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { \n  Review, \n  ReviewListResponse, \n  CreateReviewForm, \n  UpdateReviewForm,\n  ReviewStats,\n  Token,\n  LoginForm,\n  AdminReview,\n  AdminUser,\n  ImportExportData\n} from './types';\n\n// Base API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('admin_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('admin_token');\n      window.location.href = '/admin/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Public API\nexport const publicApi = {\n  // Reviews\n  async getReviews(params: {\n    page?: number;\n    per_page?: number;\n    rating?: number;\n    featured_only?: boolean;\n    search?: string;\n    sort_by?: string;\n    sort_order?: string;\n  } = {}): Promise<ReviewListResponse> {\n    const response: AxiosResponse<ReviewListResponse> = await api.get('/api/reviews', { params });\n    return response.data;\n  },\n\n  async getReview(id: number): Promise<Review> {\n    const response: AxiosResponse<Review> = await api.get(`/api/reviews/${id}`);\n    return response.data;\n  },\n\n  async createReview(reviewData: CreateReviewForm): Promise<Review> {\n    const response: AxiosResponse<Review> = await api.post('/api/reviews', reviewData);\n    return response.data;\n  },\n\n  async uploadReviewImage(reviewId: number, file: File): Promise<{ image_path: string }> {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response: AxiosResponse<{ image_path: string }> = await api.post(\n      `/api/reviews/${reviewId}/image`,\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n    return response.data;\n  },\n\n  async getStats(): Promise<ReviewStats> {\n    const response: AxiosResponse<ReviewStats> = await api.get('/api/stats');\n    return response.data;\n  },\n};\n\n// Admin API\nexport const adminApi = {\n  // Auth\n  async login(credentials: LoginForm): Promise<Token> {\n    const response: AxiosResponse<Token> = await api.post('/api/admin/login', null, {\n      params: credentials\n    });\n    return response.data;\n  },\n\n  // Admin User Management\n  async createAdmin(data: { username: string; email: string; password: string }): Promise<AdminUser> {\n    const response: AxiosResponse<AdminUser> = await api.post('/api/admin/users', data);\n    return response.data;\n  },\n\n  // Reviews Management\n  async getReviews(params: {\n    page?: number;\n    per_page?: number;\n    approved_only?: boolean;\n  } = {}): Promise<ReviewListResponse> {\n    const response: AxiosResponse<ReviewListResponse> = await api.get('/api/admin/reviews', { params });\n    return response.data;\n  },\n\n  async updateReview(id: number, updateData: UpdateReviewForm): Promise<AdminReview> {\n    const response: AxiosResponse<AdminReview> = await api.put(`/api/admin/reviews/${id}`, updateData);\n    return response.data;\n  },\n\n  async deleteReview(id: number): Promise<{ message: string }> {\n    const response: AxiosResponse<{ message: string }> = await api.delete(`/api/admin/reviews/${id}`);\n    return response.data;\n  },\n\n  // Import/Export\n  async importData(importData: {\n    reviews: Review[];\n    exported_at: string;\n  }): Promise<{ message: string; imported_count: number }> {\n    const response = await api.post('/api/admin/import', importData);\n    return response.data;\n  },\n\n  async exportData(): Promise<{\n    reviews: Review[];\n    stats: ReviewStats;\n    exported_at: string;\n  }> {\n    const response = await api.get('/api/admin/export');\n    return response.data;\n  },\n\n  async importReviews(importData: {\n    reviews: Array<{\n      name: string;\n      rating: number;\n      content: string;\n      title?: string;\n      email?: string;\n      created_at?: string;\n      import_source?: string;\n      external_id?: string;\n    }>;\n    source: string;\n  }): Promise<{ message: string; imported_count: number }> {\n    const response = await api.post('/api/admin/reviews/import', importData);\n    return response.data;\n  },\n\n  async getStats(): Promise<ReviewStats> {\n    const response: AxiosResponse<ReviewStats> = await api.get('/api/admin/stats');\n    return response.data;\n  },\n\n  async exportReviews(): Promise<Blob> {\n    const response = await api.get('/api/admin/export', {\n      responseType: 'blob',\n    });\n    return response.data;\n  },\n};\n\n// Utility functions\nexport const apiUtils = {\n  handleApiError(error: any): string {\n    if (error.response?.data?.message) {\n      return error.response.data.message;\n    }\n    if (error.message) {\n      return error.message;\n    }\n    return 'Ein unbekannter Fehler ist aufgetreten';\n  },\n\n  downloadFile(blob: Blob, filename: string): void {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  },\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString('de-DE', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  },\n\n  formatRating(rating: number): string {\n    return '★'.repeat(rating) + '☆'.repeat(5 - rating);\n  },\n\n  truncateText(text: string, maxLength: number = 200): string {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength).trim() + '...';\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}