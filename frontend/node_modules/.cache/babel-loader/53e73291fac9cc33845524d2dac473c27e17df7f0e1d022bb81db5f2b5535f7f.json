{"ast":null,"code":"import{create}from'zustand';import{publicApi,adminApi,apiUtils}from'../api';export const useReviewStore=create((set,get)=>({reviews:[],loading:false,error:null,filter:{sort_by:'created_at',sort_order:'desc'},filters:{sort_by:'created_at',sort_order:'desc'},pagination:{page:1,per_page:10,total:0,total_pages:0},fetchReviews:async filter=>{set({loading:true,error:null});try{const{filters,pagination}=get();const params={page:pagination.page,per_page:pagination.per_page,...filters,...filter};const response=await publicApi.getReviews(params);set({reviews:response.reviews,pagination:{page:response.page,per_page:response.per_page,total:response.total,total_pages:response.total_pages},loading:false});return{total:response.total,reviews:response.reviews};}catch(error){set({error:apiUtils.handleApiError(error),loading:false});throw error;}},createReview:async reviewData=>{try{const review=await publicApi.createReview(reviewData);// Upload image if provided\nif(reviewData.image){await publicApi.uploadReviewImage(review.id,reviewData.image);}// Refresh reviews\nawait get().fetchReviews();return true;}catch(error){set({error:apiUtils.handleApiError(error)});return false;}},deleteReview:async id=>{try{await adminApi.deleteReview(id);// Remove from local state\nset(state=>({reviews:state.reviews.filter(review=>review.id!==id)}));}catch(error){set({error:apiUtils.handleApiError(error)});throw error;}},toggleReviewVisibility:async id=>{try{const review=get().reviews.find(r=>r.id===id);if(!review)return;await adminApi.updateReview(id,{is_approved:!review.is_approved});// Update local state\nset(state=>({reviews:state.reviews.map(r=>r.id===id?{...r,is_approved:!r.is_approved,is_visible:!r.is_approved}:r)}));}catch(error){set({error:apiUtils.handleApiError(error)});throw error;}},updateFilters:newFilters=>{set(state=>({filters:{...state.filters,...newFilters},filter:{...state.filter,...newFilters},pagination:{...state.pagination,page:1}// Reset to first page\n}));// Auto-fetch with new filters\nsetTimeout(()=>get().fetchReviews(),100);},setFilter:newFilter=>{set(state=>({filter:newFilter,filters:newFilter,pagination:{...state.pagination,page:1}}));},setPage:page=>{set(state=>({pagination:{...state.pagination,page}}));get().fetchReviews();},clearError:()=>set({error:null})}));","map":{"version":3,"names":["create","publicApi","adminApi","apiUtils","useReviewStore","set","get","reviews","loading","error","filter","sort_by","sort_order","filters","pagination","page","per_page","total","total_pages","fetchReviews","params","response","getReviews","handleApiError","createReview","reviewData","review","image","uploadReviewImage","id","deleteReview","state","toggleReviewVisibility","find","r","updateReview","is_approved","map","is_visible","updateFilters","newFilters","setTimeout","setFilter","newFilter","setPage","clearError"],"sources":["/Users/renesuss/Development/Tools/src/guestbook-project/frontend/src/store/reviewStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { ReviewStore, ReviewFilters, ReviewFilter, CreateReviewForm } from '../types';\nimport { publicApi, adminApi, apiUtils } from '../api';\n\nexport const useReviewStore = create<ReviewStore>((set, get) => ({\n  reviews: [],\n  loading: false,\n  error: null,\n  filter: {\n    sort_by: 'created_at',\n    sort_order: 'desc',\n  },\n  filters: {\n    sort_by: 'created_at',\n    sort_order: 'desc',\n  },\n  pagination: {\n    page: 1,\n    per_page: 10,\n    total: 0,\n    total_pages: 0,\n  },\n\n  fetchReviews: async (filter?: ReviewFilter) => {\n    set({ loading: true, error: null });\n    try {\n      const { filters, pagination } = get();\n      const params = {\n        page: pagination.page,\n        per_page: pagination.per_page,\n        ...filters,\n        ...filter,\n      };\n\n      const response = await publicApi.getReviews(params);\n      \n      set({\n        reviews: response.reviews,\n        pagination: {\n          page: response.page,\n          per_page: response.per_page,\n          total: response.total,\n          total_pages: response.total_pages,\n        },\n        loading: false,\n      });\n\n      return { total: response.total, reviews: response.reviews };\n    } catch (error) {\n      set({\n        error: apiUtils.handleApiError(error),\n        loading: false,\n      });\n      throw error;\n    }\n  },\n\n  createReview: async (reviewData: CreateReviewForm) => {\n    try {\n      const review = await publicApi.createReview(reviewData);\n      \n      // Upload image if provided\n      if (reviewData.image) {\n        await publicApi.uploadReviewImage(review.id, reviewData.image);\n      }\n\n      // Refresh reviews\n      await get().fetchReviews();\n      return true;\n    } catch (error) {\n      set({ error: apiUtils.handleApiError(error) });\n      return false;\n    }\n  },\n\n  deleteReview: async (id: number) => {\n    try {\n      await adminApi.deleteReview(id);\n      // Remove from local state\n      set(state => ({\n        reviews: state.reviews.filter(review => review.id !== id)\n      }));\n    } catch (error) {\n      set({ error: apiUtils.handleApiError(error) });\n      throw error;\n    }\n  },\n\n  toggleReviewVisibility: async (id: number) => {\n    try {\n      const review = get().reviews.find(r => r.id === id);\n      if (!review) return;\n\n      await adminApi.updateReview(id, { is_approved: !review.is_approved });\n      \n      // Update local state\n      set(state => ({\n        reviews: state.reviews.map(r => \n          r.id === id \n            ? { ...r, is_approved: !r.is_approved, is_visible: !r.is_approved }\n            : r\n        )\n      }));\n    } catch (error) {\n      set({ error: apiUtils.handleApiError(error) });\n      throw error;\n    }\n  },\n\n  updateFilters: (newFilters: Partial<ReviewFilters>) => {\n    set(state => ({\n      filters: { ...state.filters, ...newFilters },\n      filter: { ...state.filter, ...newFilters },\n      pagination: { ...state.pagination, page: 1 }, // Reset to first page\n    }));\n    // Auto-fetch with new filters\n    setTimeout(() => get().fetchReviews(), 100);\n  },\n\n  setFilter: (newFilter: ReviewFilters) => {\n    set(state => ({\n      filter: newFilter,\n      filters: newFilter,\n      pagination: { ...state.pagination, page: 1 },\n    }));\n  },\n\n  setPage: (page: number) => {\n    set(state => ({\n      pagination: { ...state.pagination, page },\n    }));\n    get().fetchReviews();\n  },\n\n  clearError: () => set({ error: null }),\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}