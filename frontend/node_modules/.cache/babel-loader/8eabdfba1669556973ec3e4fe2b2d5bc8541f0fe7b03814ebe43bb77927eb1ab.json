{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{useAuthStore}from'../store/authStore';export const useSessionTimer=()=>{const{token}=useAuthStore();const[timeLeft,setTimeLeft]=useState(0);const[sessionExpiry,setSessionExpiry]=useState(null);// Token-Parsing um Ablaufzeit zu ermitteln\nconst parseTokenExpiry=useCallback(token=>{try{const payload=JSON.parse(atob(token.split('.')[1]));return payload.exp?payload.exp*1000:null;// JWT exp ist in Sekunden, wir brauchen Millisekunden\n}catch(error){console.error('Error parsing token:',error);return null;}},[]);// Session-Expiry berechnen wenn Token sich 채ndert\nuseEffect(()=>{if(token){const expiry=parseTokenExpiry(token);setSessionExpiry(expiry);}else{setSessionExpiry(null);setTimeLeft(0);}},[token,parseTokenExpiry]);// Timer-Update alle Sekunde\nuseEffect(()=>{if(!sessionExpiry)return;const updateTimer=()=>{const now=Date.now();const remainingMs=sessionExpiry-now;const remainingSeconds=Math.max(0,Math.floor(remainingMs/1000));setTimeLeft(remainingSeconds);};// Sofortiges Update\nupdateTimer();// Intervall f체r Updates\nconst interval=setInterval(updateTimer,1000);return()=>clearInterval(interval);},[sessionExpiry]);// Zeit formatieren (MM:SS oder HH:MM:SS)\nconst formatTimeLeft=useCallback(()=>{if(timeLeft<=0)return'00:00';const hours=Math.floor(timeLeft/3600);const minutes=Math.floor(timeLeft%3600/60);const seconds=timeLeft%60;if(hours>0){return`${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;}else{return`${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;}},[timeLeft]);return{timeLeft,isExpiringSoon:timeLeft>0&&timeLeft<=300,// 5 Minuten Warnung\nisExpired:timeLeft<=0&&sessionExpiry!==null,formatTimeLeft};};","map":{"version":3,"names":["useState","useEffect","useCallback","useAuthStore","useSessionTimer","token","timeLeft","setTimeLeft","sessionExpiry","setSessionExpiry","parseTokenExpiry","payload","JSON","parse","atob","split","exp","error","console","expiry","updateTimer","now","Date","remainingMs","remainingSeconds","Math","max","floor","interval","setInterval","clearInterval","formatTimeLeft","hours","minutes","seconds","toString","padStart","isExpiringSoon","isExpired"],"sources":["/Users/renesuss/Development/Tools/src/guestbook-project/frontend/src/hooks/useSessionTimer.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuthStore } from '../store/authStore';\n\ninterface SessionTimerState {\n  timeLeft: number; // Sekunden bis zum Ablauf\n  isExpiringSoon: boolean; // Warnung wenn < 5 Minuten\n  isExpired: boolean;\n  formatTimeLeft: () => string;\n}\n\nexport const useSessionTimer = (): SessionTimerState => {\n  const { token } = useAuthStore();\n  const [timeLeft, setTimeLeft] = useState<number>(0);\n  const [sessionExpiry, setSessionExpiry] = useState<number | null>(null);\n\n  // Token-Parsing um Ablaufzeit zu ermitteln\n  const parseTokenExpiry = useCallback((token: string): number | null => {\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return payload.exp ? payload.exp * 1000 : null; // JWT exp ist in Sekunden, wir brauchen Millisekunden\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      return null;\n    }\n  }, []);\n\n  // Session-Expiry berechnen wenn Token sich 채ndert\n  useEffect(() => {\n    if (token) {\n      const expiry = parseTokenExpiry(token);\n      setSessionExpiry(expiry);\n    } else {\n      setSessionExpiry(null);\n      setTimeLeft(0);\n    }\n  }, [token, parseTokenExpiry]);\n\n  // Timer-Update alle Sekunde\n  useEffect(() => {\n    if (!sessionExpiry) return;\n\n    const updateTimer = () => {\n      const now = Date.now();\n      const remainingMs = sessionExpiry - now;\n      const remainingSeconds = Math.max(0, Math.floor(remainingMs / 1000));\n      setTimeLeft(remainingSeconds);\n    };\n\n    // Sofortiges Update\n    updateTimer();\n\n    // Intervall f체r Updates\n    const interval = setInterval(updateTimer, 1000);\n\n    return () => clearInterval(interval);\n  }, [sessionExpiry]);\n\n  // Zeit formatieren (MM:SS oder HH:MM:SS)\n  const formatTimeLeft = useCallback((): string => {\n    if (timeLeft <= 0) return '00:00';\n\n    const hours = Math.floor(timeLeft / 3600);\n    const minutes = Math.floor((timeLeft % 3600) / 60);\n    const seconds = timeLeft % 60;\n\n    if (hours > 0) {\n      return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    } else {\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }\n  }, [timeLeft]);\n\n  return {\n    timeLeft,\n    isExpiringSoon: timeLeft > 0 && timeLeft <= 300, // 5 Minuten Warnung\n    isExpired: timeLeft <= 0 && sessionExpiry !== null,\n    formatTimeLeft,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}