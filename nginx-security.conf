# ===========================================
# NGINX SECURITY CONFIGURATION
# Enhanced Security Headers for Production
# ===========================================
#
# Diese Nginx-Konfiguration fügt alle fehlenden
# HTTP-Sicherheitsheader hinzu, die im Security-Scan
# identifiziert wurden.
#
# Verwenden Sie diese Konfiguration als Reverse Proxy
# vor Ihrer Guestbook-Anwendung für maximale Sicherheit.
#
# ===========================================

server {
    listen 80;
    server_name guestbook.gcng.de;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name guestbook.gcng.de;

    # SSL Configuration (Zertifikate müssen bereitgestellt werden)
    ssl_certificate /etc/ssl/certs/guestbook.crt;
    ssl_certificate_key /etc/ssl/private/guestbook.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers (ALLE FEHLENDEN HEADER AUS DEM SCAN)

    # X-Frame-Options: Verhindert Clickjacking
    add_header X-Frame-Options "DENY" always;

    # X-Content-Type-Options: Verhindert MIME-Sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # X-XSS-Protection: XSS-Filter aktivieren
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer-Policy: Kontrolliert Referrer-Informationen
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions-Policy: Browser-Feature-Kontrolle
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;

    # Content-Security-Policy: XSS und Code-Injection verhindern
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'self'; frame-src 'none'; worker-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;

    # Strict-Transport-Security: HTTPS erzwingen
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # X-Permitted-Cross-Domain-Policies: Cross-Domain-Zugriff verhindern
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Additional Security Headers
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    add_header X-Download-Options "noopen" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    # Remove Server Header
    server_tokens off;
    more_clear_headers Server;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/m;

    # Main Location
    location / {
        # Rate limiting für normale Requests
        limit_req zone=api burst=20 nodelay;

        # Proxy zu Guestbook-App
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeout Settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer Settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Admin Area - Zusätzliche Sicherheit
    location /admin {
        # Strikte Rate Limiting für Admin-Bereich
        limit_req zone=login burst=5 nodelay;

        # IP-Whitelist (optional - spezifische IPs erlauben)
        # allow 192.168.2.0/24;
        # deny all;

        # Zusätzliche Headers für Admin-Bereich
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;

        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Upload Endpoint - Rate Limiting
    location /upload {
        limit_req zone=upload burst=3 nodelay;
        client_max_body_size 10M;

        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API Endpoints
    location /api/ {
        limit_req zone=api burst=10 nodelay;

        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static Files (falls vorhanden)
    location /static/ {
        alias /var/www/guestbook/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Health Check
    location /health {
        access_log off;
        proxy_pass http://127.0.0.1:8080;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|config|ini|log|sql)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# ===========================================
# INSTALLATION UND VERWENDUNG
# ===========================================
#
# 1. SSL-Zertifikate bereitstellen:
#    - Let's Encrypt: certbot --nginx -d guestbook.gcng.de
#    - Oder eigene Zertifikate in /etc/ssl/ ablegen
#
# 2. Nginx-Module installieren (falls nicht vorhanden):
#    - nginx-module-headers-more (für more_clear_headers)
#
# 3. Diese Konfiguration nach /etc/nginx/sites-available/ kopieren
#    und in sites-enabled verlinken
#
# 4. Nginx-Konfiguration testen:
#    nginx -t
#
# 5. Nginx neu laden:
#    systemctl reload nginx
#
# 6. Security-Scan wiederholen zur Verifizierung
#
# ===========================================
