name: Security Audit

on:
  schedule:
  # TÃ¤glich um 2:00 UTC
  - cron: '0 2 * * *'
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Python Security Audit
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python security tools
      run: |
        pip install safety bandit semgrep

    - name: Python Safety Check
      run: |
        cd backend
        pip install -r requirements.txt
        safety check --json --output safety-report.json || true

    - name: Python Bandit Security Scan
      run: |
        cd backend
        bandit -r . -f json -o bandit-report.json || true

    # Node.js Security Audit
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Node.js Security Audit
      run: |
        cd frontend
        npm ci
        npm audit --json > npm-audit-report.json || true

    # Docker Security Scan
    - name: Docker Security Scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'json'
        output: 'trivy-report.json'

    # CodeQL Analysis
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python, javascript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    # Semgrep Static Analysis
    - name: Semgrep Security Scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit p/python p/javascript

    # Upload Results
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          backend/safety-report.json
          backend/bandit-report.json
          frontend/npm-audit-report.json
          trivy-report.json

    # Create Issue on Security Findings
    - name: Create Security Issue
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Security vulnerabilities detected',
            body: `Security audit workflow has detected potential vulnerabilities.
            
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Please review the security reports and address any critical issues.
            
            ---
            *This issue was created automatically by the security audit workflow.*`,
            labels: ['security', 'bug', 'high-priority']
          })
